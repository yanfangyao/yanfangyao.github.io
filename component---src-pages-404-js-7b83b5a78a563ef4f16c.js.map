{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","h1,h2,h3,h4,h5,h6","fontFamily",".gatsby-highlight-code-line","backgroundColor","display","marginRight","marginLeft","paddingRight","paddingLeft","borderLeft","color",".gatsby-highlight-code-line .token.punctuation",".gatsby-highlight","borderRadius","margin","padding","overflow",".gatsby-highlight pre[class*=\"language-\"]","float","minWidth",".gatsby-highlight pre[class*=\"language-\"].line-numbers","googleFonts","typography","Typography","scale","m","module","exports","require","default","StyledH1","styled","h1","withConfig","displayName","componentId","StyledLink","Link","StyledH3","h3","Container","div","Layout","header","_this$props","pathname","to","Date","getFullYear","href","array","SEO","_ref","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-js-7b83b5a78a563ef4f16c.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\"/>\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    );\n  }\n}\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`\n    },\n    'h1,h2,h3,h4,h5,h6': {\n      fontFamily: 'PingFang SC,Helvetica Neue,Hiragino Sans GB,Microsoft YaHei,\\\\\\\\5FAE\\\\8F6F\\\\96C5\\\\9ED1,Helvetica,Arial,Verdana,sans-serif;\\n'\n    },\n    '.gatsby-highlight-code-line': {\n      backgroundColor: '#feb',\n      display: 'block',\n      marginRight: '-1em',\n      marginLeft: '-1em',\n      paddingRight: '1em',\n      paddingLeft: '0.75em',\n      borderLeft: '0.25em solid #f99',\n      color: 'rgba(0, 0, 0, .9)'\n    },\n    '.gatsby-highlight-code-line .token.punctuation': {\n      color: 'rgba(0, 0, 0, .9)'\n    },\n    '.gatsby-highlight': {\n      backgroundColor: '#2d2d2d',\n      borderRadius: '0.3em',\n      margin: '0.5em 0',\n      padding: '1em',\n      overflow: 'auto'\n    },\n    '.gatsby-highlight pre[class*=\"language-\"]': {\n      backgroundColor: 'transparent',\n      margin: 0,\n      padding: 0,\n      overflow: 'initial',\n      float: 'left',\n      minWidth: '100%'\n    },\n    '.gatsby-highlight pre[class*=\"language-\"].line-numbers': {\n      paddingLeft: '2.8em'\n    }\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { rhythm } from '../utils/typography';\n\nconst StyledH1 = styled.h1`\n  margin-bottom: ${rhythm(1.5)};\n  margin-top: 0;\n  font-size: ${rhythm(2.2)};\n`;\n\nconst StyledLink = styled(Link)`\n  box-shadow: none;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst StyledH3 = styled.h3`\n  margin-top: 0;\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: ${rhythm(24)};\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  font-family: Lato,PingFang SC,Microsoft YaHei,sans-serif;\n`;\n\nclass Layout extends React.Component {\n  static propTypes = {\n    location: PropTypes.object,\n    title: PropTypes.string,\n    children: PropTypes.array\n  };\n\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <StyledH1>\n          <StyledLink\n            to={`/`}\n          >\n            {title}\n          </StyledLink>\n        </StyledH1>\n      );\n    } else {\n      header = (\n        <StyledH3>\n          <StyledLink\n            to={`/`}\n          >\n            {title}\n          </StyledLink>\n        </StyledH3>\n      );\n    }\n    return (\n      <Container>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </Container>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'zh-CN',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}