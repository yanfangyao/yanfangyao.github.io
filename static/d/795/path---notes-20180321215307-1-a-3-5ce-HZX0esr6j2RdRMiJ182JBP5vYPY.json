{"data":{"site":{"siteMetadata":{"title":"William's Blog","author":"William"}},"markdownRemark":{"id":"4941d072-80f4-56d4-802a-219c312e4f5c","excerpt":"click事件延迟触发原因 　　为了优化PC站页面在移动设备上的显示，现代移动端浏览器默认开启页面双击缩放功能。为了判断用户当前手势是单击还是双击，浏览器在touchend事件触发后设置了一个300ms左右的延时。如果在该延时内用户再次触摸屏幕，则浏览器判定当前用户手势是双击，否则为单击并且触发click…","html":"<h2>click事件延迟触发原因</h2>\n<p>　　为了优化PC站页面在移动设备上的显示，现代移动端浏览器默认开启页面双击缩放功能。为了判断用户当前手势是单击还是双击，浏览器在touchend事件触发后设置了一个300ms左右的延时。如果在该延时内用户再次触摸屏幕，则浏览器判定当前用户手势是双击，否则为单击并且触发click事件。因此，移动端浏览器click事件延迟触发的根本原因在于浏览器<strong>支持页面双击缩放</strong>。<br>\n　　在Chrome 65、Firefox 10.6和Safari(iOS 11.2)上验证click事件的延迟触发，测试结果依次展示如下：</p>\n<div style=\"text-align: center;\">\n<img width=\"33%\" src=\"/static/click_test_chrome65-07d9c4da6adc4f3a0b4b5ec8d83394b6.gif\" alt=\"Chrome 65&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_firefox10_6-fe1f0d9900967bc70227391edf5de002.gif\" alt=\"Firefox 10.6&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_safari_ios_11_2-cb9330427998e680b7eb740752a0536e.gif\" alt=\"Safari(iOS 11.2)&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n</div>\n<h2>解决click事件延迟触发的方案</h2>\n<p>　　移动端浏览器click事件的延迟触发会损害用户体验，针对延迟产生的原因，目前主要有以下解决方案：<br>\n　　（1）<strong>禁止页面缩放</strong>。在页面html文档的head标签中插入如下meta标签中的任何一个会禁止页面的缩放功能。浏览器检测到页面缩放功能被禁止之后会消除click事件的300ms延时，实现快速点击。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>user-scalable=no<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>initial-scale=1,minimum-scale=1,maximum-scale=1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>　　在Chrome 65、Firefox 10.6和Safari(iOS 11.2)上验证该方案的可行性，测试结果依次展示如下：</p>\n<div style=\"text-align: center;\">\n<img width=\"33%\" src=\"/static/click_test_chrome65_s1-00d27747f65072de515d5e67780ac124.gif\" alt=\"Chrome 65&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_firefox10_6_s1-fcaae1c2c205ddbf3881193fe6c410f5.gif\" alt=\"Firefox 10.6&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_safari_ios_11_2_s1-ea567fe71dd8539fcc5920b50fb28b86.gif\" alt=\"Safari(iOS 11.2)&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n</div>\n&#x3000;&#x3000;&#x6839;&#x636E;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8BE5;&#x65B9;&#x6848;&#x53EA;&#x5728;Chrome&#x548C;Firefox&#x4E2D;&#x751F;&#x6548;&#xFF0C;&#x5728;Safari&#x4E2D;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#x3002;&#x6D4B;&#x8BD5;&#x53D1;&#x73B0;&#xFF0C;&#x5728;Chrome&#x548C;Firefox&#x4E2D;&#x4F7F;&#x7528;&#x8BE5;&#x65B9;&#x6848;&#x65F6;&#xFF0C;&#x7F51;&#x9875;&#x4E0D;&#x80FD;&#x88AB;&#x7F29;&#x653E;&#xFF08;&#x5305;&#x62EC;&#x53CC;&#x51FB;&#x7F29;&#x653E;&#x548C;&#x53CC;&#x6307;&#x7F29;&#x653E;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5728;Safari&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#xFF0C;&#x7F51;&#x9875;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x88AB;&#x7F29;&#x653E;&#xFF08;&#x5305;&#x62EC;&#x53CC;&#x51FB;&#x7F29;&#x653E;&#x548C;&#x53CC;&#x6307;&#x7F29;&#x653E;&#xFF09;&#x3002;\n<p>　　（2）<strong>设置浏览器视口宽度等于设备屏幕宽度</strong>。该方法的原理在于当浏览器检测到页面设置的视口宽度小于或者等于设备宽度时，就会认为该页面已经针对移动端设备进行优化了页面，不需要双击缩放功能来保证页面在移动设备上的合理展示，因此，浏览器会禁用页面的双击缩放功能。此时，click事件延时触发的问题也自然被消除。在页面html文档的head标签中插入如下meta标签可以设置浏览器视口等于设备宽度。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>　　在Chrome 65、Firefox 10.6和Safari(iOS 11.2)上验证该方案的可行性，测试结果依次展示如下：</p>\n<div style=\"text-align: center;\">\n<img width=\"33%\" src=\"/static/click_test_chrome65_s2-1f4606fd881eaa58b427b0a6d1b7000d.gif\" alt=\"Chrome 65&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_firefox10_6_s2-3673e295fb62a6320083e944d7924d4f.gif\" alt=\"Firefox 10.6&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_safari_ios_11_2_s2-568aaa8b559464fb6215d8528bffb769.gif\" alt=\"Safari(iOS 11.2)&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n</div>\n&#x3000;&#x3000;&#x6839;&#x636E;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5728;Chrome&#x3001;Firefox&#x548C;Safari&#x4E0A;&#x5747;&#x53EF;&#x4EE5;&#x6D88;&#x9664;click&#x4E8B;&#x4EF6;&#x5EF6;&#x8FDF;300s&#x89E6;&#x53D1;&#x7684;&#x95EE;&#x9898;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x867D;&#x7136;&#x7981;&#x6B62;&#x4E86;&#x9875;&#x9762;&#x7684;&#x53CC;&#x51FB;&#x7F29;&#x653E;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x4FDD;&#x7559;&#x4E86;&#x9875;&#x9762;&#x7684;&#x53CC;&#x6307;&#x7F29;&#x653E;&#x529F;&#x80FD;&#x3002;&#x6D4B;&#x8BD5;&#x53D1;&#x73B0;&#xFF0C;&#x4E00;&#x65E6;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x4E86;&#x9875;&#x9762;&#x7684;&#x53CC;&#x6307;&#x7F29;&#x653E;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x9875;&#x9762;&#x5904;&#x4E8E;&#x653E;&#x5927;&#x7684;&#x72B6;&#x6001;&#x4E0B;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x7684;click&#x4E8B;&#x4EF6;&#x89E6;&#x53D1;&#x4F1A;&#x518D;&#x6B21;&#x5177;&#x6709;300ms&#x5EF6;&#x8FDF;&#xFF0C;&#x5F53;&#x9875;&#x9762;&#x6062;&#x590D;&#x81F3;&#x521D;&#x59CB;&#x72B6;&#x6001;&#x540E;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;click&#x4E8B;&#x4EF6;&#x89E6;&#x53D1;&#x5EF6;&#x8FDF;&#x53C8;&#x4F1A;&#x6D88;&#x9664;&#x3002;\n<p>　　（3）<strong>使用CSS属性touch-action</strong>。通过给页面所有元素或者特定的元素设置touch-action属性可以保证点击对应的元素时click事件响应无延时。设置方法如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">[selector]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span> manipulation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>　　在Chrome 65、Firefox 10.6和Safari(iOS 11.2)上验证该方案的可行性，测试结果依次展示如下：</p>\n<div style=\"text-align: center;\">\n<img width=\"33%\" src=\"/static/click_test_chrome65_s3-862b299562a47f2b7ec03878502f1652.gif\" alt=\"Chrome 65&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_firefox10_6_s3-e7c833ba5b1d39ea32609e9bfd2a9c08.gif\" alt=\"Firefox 10.6&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n<img width=\"33%\" src=\"/static/click_test_safari_ios_11_2_s3-c6efa36869211a933164e7e1ecca8d12.gif\" alt=\"Safari(iOS 11.2)&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;\">\n</div>\n<p>　　根据测试结果可以看出，在Chrome、Firefox和Safari浏览器上使用该方法均可以消除click事件的触发延迟。从<a href=\"https://caniuse.com/#search=touch-action\">caniuse官网</a>查询可知，Chrome 36+、Firefox 52+完全支持该属性，Safari 9.3+支持该属性的部分功能。<br>\n　　（4）使用<a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/touchend\">touchend</a>事件替换click事件。<br>\n　　（5）使用FT Labs开发的开源库<a href=\"https://github.com/ftlabs/fastclick\">fastclick</a>。</p>\n<h2>总结</h2>\n<p>　　移动端浏览器的click事件触发具有300ms的延迟是浏览器为了支持页面的双击缩放而引入的一个特性。为了消除这一特性给用户体验带来的不好影响，可以根据项目实际情况对上述五种方案进行选择，确定最合适的方案。</p>\n<h2>参考文献</h2>\n<ol>\n<li><a href=\"https://developers.google.com/web/updates/2013/12/300ms-tap-delay-gone-away\">Google developers: 300ms tap delay, gone away</a></li>\n<li><a href=\"https://www.sitepoint.com/5-ways-prevent-300ms-click-delay-mobile-devices/\">Sitepoint: 5 Ways to Prevent the 300ms Click Delay on Mobile Devices</a></li>\n<li><a href=\"https://codereview.chromium.org/18850005/#ps106001\">Chromium Code Reviews: Disable double tap zoom on mobile sites, to remove 300ms click delay</a></li>\n<li><a href=\"http://baishusama.github.io/2017/03/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF-click-%E4%BA%8B%E4%BB%B6%E7%9A%84-300ms-%E5%BB%B6%E8%BF%9F/\">移动端 click 事件 300ms 延迟的前世今生</a></li>\n</ol>","frontmatter":{"title":"移动端浏览器click事件延迟触发的研究","date":"March 21, 2018","description":"在移动端web页面开发过程中，click事件会有大概300ms左右的延时。点击延时会给用户带来极糟糕的体验，如何消除移动端网页的点击延时呢？笔者经过查找资料，将所得到的收获总结成这篇博文。"}}},"pageContext":{"slug":"/notes/20180321215307/","previous":{"fields":{"slug":"/notes/20180314211238/"},"frontmatter":{"title":"Base-64编码学习笔记"}},"next":{"fields":{"slug":"/notes/20180411213829/"},"frontmatter":{"title":"querySelector/querySelectorAll遍历元素的顺序"}}}}