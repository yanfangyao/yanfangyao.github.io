{"data":{"site":{"siteMetadata":{"title":"William's Blog","author":"William"}},"markdownRemark":{"id":"1072b97f-6d87-5a48-8a95-7c49cc3bafd6","excerpt":"问题背景 　　笔者在项目开发中使用 webpack 构建前端静态资源，项目中用到了ejs模板并使用 ejs-loader 进行解析。当笔者使用ejs的 include语法 在一个ejs模板中引入另一个ejs模板时，webpack一直构建失败。 问题产生原因 　　笔者在ejs-loader的 README…","html":"<h2>问题背景</h2>\n<p>　　笔者在项目开发中使用<a href=\"https://doc.webpack-china.org/\">webpack</a>构建前端静态资源，项目中用到了ejs模板并使用<a href=\"https://github.com/okonet/ejs-loader\">ejs-loader</a>进行解析。当笔者使用ejs的<a href=\"http://ejs.co/#docs\">include语法</a>在一个ejs模板中引入另一个ejs模板时，webpack一直构建失败。</p>\n<h2>问题产生原因</h2>\n<p>　　笔者在ejs-loader的<a href=\"https://github.com/okonet/ejs-loader/blob/master/README.md\">README文档</a>中找到了原因：ejs-loader使用<a href=\"https://lodash.com/docs/4.17.4#template\">lodash库中的template函数</a>编译ejs模板而不是使用标准的ejs模板引擎。由于<a href=\"https://lodash.com/docs/4.17.4#template\">lodash库中的template函数</a>无法识别ejs的include方法，所以按照笔者的方式进行ejs模板的嵌套不成功。</p>\n<h2>问题解决方案</h2>\n<ol>\n<li>\n<p>在使用ejs-loader的情况下，以参数的形式将ejs-loader编译后生成的子模板函数传入到父模板函数中，然后在父ejs模板中需要嵌套子模板的地方以&#x3C;%= childTemplateFunction(data) %>的形式引用子模板函数，这样就可以实现ejs模板的嵌套。示例代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> parent <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./parent.ejs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./child.ejs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderHTML <span class=\"token operator\">=</span> <span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\nchild\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>parent.ejs:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>&lt;%= child({name: 'test'}) %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>child.ejs:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>&lt;%= name %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>renderHTML:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>使用<a href=\"https://github.com/bazilio91/ejs-compiled-loader\">ejs-compiled-loader</a>替换ejs-loader。<a href=\"https://github.com/bazilio91/ejs-compiled-loader\">ejs-compiled-loader</a>使用ejs引擎编译ejs模板，支持ejs的include语法。</li>\n</ol>","frontmatter":{"title":"解决webpack中使用ejs-loader时模板嵌套的问题","date":"January 25, 2018","description":"笔者在项目开发中使用webpack构建前端静态资源，项目中用到了ejs模板并使用ejs-loader进行解析。当笔者使用ejs的include语法在一个ejs模板中引入另一个ejs模板时，webpack一直构建失败。经过查找资料，笔者找到了解决问题的办法，并将其记录在本篇博文中。"}}},"pageContext":{"slug":"/tips/20180125192502/","previous":{"fields":{"slug":"/image/20171105132655/"},"frontmatter":{"title":"图片等比例缩放"}},"next":{"fields":{"slug":"/translate/20180202205143/"},"frontmatter":{"title":"为什么setTimeout和setInterval的实际延时比设置的时间长"}}}}