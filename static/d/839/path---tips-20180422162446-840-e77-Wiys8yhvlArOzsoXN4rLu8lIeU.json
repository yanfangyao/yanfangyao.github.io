{"data":{"site":{"siteMetadata":{"title":"William's Blog","author":"William"}},"markdownRemark":{"id":"94d4c843-d14c-54e3-89d4-fc65d0de36ff","excerpt":"问题背景 　　在移动端网页中，经常会以弹层的形式来展示信息给用户。在开发弹层时经常会遇到这样一个问题：当用户手指在弹层上滑动时，弹层下面的内容也会跟随手指的滑动一起滚动。这就是移动端网页的 “滚动穿透” 问题。 问题产生原因 　　当用户手指在弹层上滑动时，默认触发了浏览器的 “scroll” 事件，事件冒泡至body…","html":"<h2>问题背景</h2>\n<p>　　在移动端网页中，经常会以弹层的形式来展示信息给用户。在开发弹层时经常会遇到这样一个问题：当用户手指在弹层上滑动时，弹层下面的内容也会跟随手指的滑动一起滚动。这就是移动端网页的 “滚动穿透” 问题。</p>\n<h2>问题产生原因</h2>\n<p>　　当用户手指在弹层上滑动时，默认触发了浏览器的 “scroll” 事件，事件冒泡至body元素，于是就产生了 “滚动穿透” 效果。</p>\n<h2>问题解决方案</h2>\n<p>　　针对移动端页面”滚动穿透”的问题，目前主要有两种解决方案：<br>\n　　（1）在touchmove事件处理函数中使用preventDefault()阻止事件的默认动作。当用户手指在弹层上滑动时，浏览器不再触发 “scroll” 事件，“滚动穿透” 现象也就不再发生。但是该解决方案不适用于弹层需要实现滚动的场景。<br>\n　　（2）当发起弹层时，设置body元素的position属性为fixed，并且设置body元素向上的偏移量等于此时其已经滚动的距离；当关闭弹层时，恢复body元素的相关属性即可。该方案与方案（1）相比，可以适用于弹层包含滚动的场景，是一个相对完美的解决方案。该方案的核心处理函数的示例代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 发起弹层时调动</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fixBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> scrollTop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'fixed'</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>scrollTop <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 设置body宽度等于viewport的宽度，防止body子元素宽度大于视口宽度时布局错乱</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 关闭弹层时调用</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">relaxBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 清空position属性</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 恢复scrollTop</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 清空top属性</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 清空width属性</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>小提示</h2>\n<p>　　对于PC端页面来说，可以设置body元素的overflow属性的值为hidden来解决弹层的 “滚动穿透” 问题。该方案只适用于PC端页面，不适用于移动端页面。</p>","frontmatter":{"title":"解决移动端网页开发“滚动穿透”问题","date":"April 22, 2018","description":"在移动端网页中，经常会以弹层的形式来展示信息给用户。在开发弹层时经常会遇到这样一个问题：当用户手指在弹层上滑动时，弹层下面的内容也会跟随手指的滑动一起滚动。这就是移动端网页的 \"滚动穿透\" 问题。本博文介绍了两种解决方案，可以根据业务需求选择合适的解决方案。"}}},"pageContext":{"slug":"/tips/20180422162446/","previous":{"fields":{"slug":"/notes/20180412215709/"},"frontmatter":{"title":"现代浏览器的工作原理（一）"}},"next":{"fields":{"slug":"/notes/20180424213011/"},"frontmatter":{"title":"现代浏览器的工作原理（二）"}}}}